{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","component/auth/LoginScreen.js","component/ui/Navbar.js","helpers/calendar-menssages.js","component/calendar/CalendarEvent.js","actions/ui.js","component/calendar/CalendarModal.js","component/ui/AddNewFab.js","component/ui/DeleteEventFab.js","component/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","checkingFinish","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","respuesta","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","autoComplete","errors","errorsArray","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","Modal","setAppElement","now","minutes","seconds","add","oneMoreHour","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","resp","console","error","getState","evento","_id","log","eventStartAddNew","minDate","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42fdecca.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url );\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n};\r\n","\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = []) => {\r\n\r\n    return events.map( e => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate()\r\n    }) );\r\n\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n\r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n\r\n                dispatch( eventAddNew( event ) );\r\n\r\n            }\r\n\r\n        } catch ( error ) {\r\n\r\n            console.log( error );\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdated = ( event ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${event.id}`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n\r\n                dispatch( eventUpdated( event ) );\r\n\r\n            } else {\r\n\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n\r\n            }\r\n\r\n        } catch ( error ) {\r\n\r\n            console.error( error );\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = ( ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${id}`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n\r\n                dispatch( eventDeleted( ) );\r\n\r\n            } else {\r\n\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n\r\n            }\r\n\r\n        } catch ( error ) {\r\n\r\n            console.error( error );\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n            const events = prepareEvents( body.eventos );\r\n\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch ( error ) {\r\n\r\n            console.log( error );\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\n/**\r\n *\r\n * @param {string} email\r\n * @param {string} password\r\n * @returns\r\n */\r\nexport const startLogin = ( email, password ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const respuesta = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await respuesta.json();\r\n\r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n\r\n        } else {\r\n\r\n            Swal.fire( 'Error', body.msg, 'error' );\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const respuesta = await fetchSinToken( 'auth/new', { password, email, name }, 'POST' );\r\n        const body = await respuesta.json();\r\n\r\n\r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n\r\n        } else {\r\n\r\n            if ( body.errors ) {\r\n\r\n                const { errorsArray } = body;\r\n\r\n                Swal.fire( 'Error', errorsArray[0], 'error' );\r\n\r\n            } else {\r\n\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const respuesta = await fetchConToken( 'auth/renew' );\r\n        const body = await respuesta.json();\r\n\r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n\r\n        } else {\r\n\r\n            dispatch( checkingFinish() );\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch( eventLogout() );\r\n\r\n    };\r\n\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});\r\n","\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [values, setValues] = useState( initialState );\r\n\r\n    const reset = () => {\r\n\r\n        setValues( initialState );\r\n\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'javier_roig@hotmail.es',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n    const handleLogin = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n\r\n    };\r\n\r\n    const handlRegister = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n\r\n            Swal.fire( 'Error', 'Las contraseñas no coinciden', 'error' );\r\n\r\n        } else {\r\n\r\n            dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                                autoComplete=\"current-email\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handlRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value= { rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value= { rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                                autoComplete=\"username\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value= { rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value= { rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                                autoComplete=\"new-password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                                autoComplete=\"new-password\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch( startLogout() );\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={ handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir </span>\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n};\r\n","\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user: { name } } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { name }</span>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nCalendarEvent.propTypes = {\r\n    event: PropTypes.object\r\n};\r\n","import { types } from '../types/types';\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from '../../../node_modules/moment/moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\n\r\nModal.setAppElement( '#root' );\r\n\r\nconst now = moment().minutes( 0 ).seconds( 0 ).add( 1, 'hours' );\r\nconst oneMoreHour = now.clone().add( 1, 'hours' );\r\n\r\nconst initEvent = {\r\n    title: 'Evento',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: oneMoreHour.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( oneMoreHour.toDate() );\r\n    const [titleValid, setTitleValid] = useState( true );\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect( () => {\r\n\r\n        if ( activeEvent ) {\r\n\r\n            setFormValues( activeEvent );\r\n\r\n        } else {\r\n\r\n            setFormValues( initEvent );\r\n\r\n        }\r\n\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    };\r\n\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n\r\n    };\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n\r\n    };\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n\r\n    };\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n\r\n            return Swal.fire( 'Error', 'La feca de fin debe de ser mayor a la fecha de inicio', 'error' );\r\n\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n\r\n            return setTitleValid( false );\r\n\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n\r\n            dispatch( eventStartUpdated( formValues ) );\r\n\r\n        } else {\r\n\r\n            dispatch( eventStartAddNew( formValues ) );\r\n\r\n        }\r\n\r\n        setTitleValid( true );\r\n        closeModal();\r\n\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { ( activeEvent ) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n\r\n        dispatch( uiOpenModal() );\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n\r\n};\r\n","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n\r\n        dispatch( eventStartDeleted() );\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    );\r\n\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-menssages';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale( 'es' );\r\n\r\nconst localizer = momentLocalizer( moment );\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem( 'lastView' ) || 'month' );\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector( state => state.auth );\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n\r\n    useEffect( () => {\r\n\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = () => {\r\n\r\n        dispatch( uiOpenModal() );\r\n\r\n    };\r\n\r\n    const onSelectEvent = ( e ) => {\r\n\r\n        dispatch( eventSetActive( e ) );\r\n\r\n    };\r\n\r\n    const onViewChange = ( e ) => {\r\n\r\n        setLastView( e );\r\n        localStorage.setItem( 'lastView', e );\r\n\r\n    };\r\n\r\n    const onSelectSlot = () => {\r\n\r\n        dispatch( eventClearActiveEvent() );\r\n\r\n    };\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        };\r\n\r\n        return {\r\n            style\r\n        };\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{ event: CalendarEvent }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n\n        />\n    );\n\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n\n        />\n    );\n\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../component/auth/LoginScreen';\r\nimport { CalendarScreen } from '../component/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect( () => {\r\n\r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]);\r\n\r\n    if ( checking ) {\r\n\r\n        return ( <h5>Espere...</h5> );\r\n\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n\r\n};\r\n","import { types } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    checking: true\r\n};\r\n\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            };\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            };\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            };\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n\r\n        default:\r\n\r\n            return state;\r\n\r\n    }\r\n\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = ( typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n    document.getElementById( 'root' )\n);\n\n"],"sourceRoot":""}